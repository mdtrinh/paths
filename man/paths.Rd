% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paths.R, R/print.paths.R
\name{paths}
\alias{paths}
\alias{print.paths}
\title{Causal Paths Analysis}
\usage{
paths(a, y, models, ps_model = NULL, nboot = 500, conf_level = 0.95, data, ...)

\method{print}{paths}(x, ...)
}
\arguments{
\item{a}{a character string indicating the name of the treatment variable. Only binary treatments
are currently supported.}

\item{y}{a character string indicating the name of the outcome variable.}

\item{models}{a list of \eqn{K+1} fitted model objects describing how the outcome depends on treatment,
  pretreatment confounders, and varying sets of mediators, where \eqn{K} is the number of mediators.
  \itemize{
  \item the first element is a baseline model of the outcome conditional on treatment and pretreatment
   confounders.
  \item the \eqn{k}th element is an outcome model conditional on treatment, pretreatment confounders,
  and mediators \eqn{M_1,\ldots, M_{k-1}}.
  \item the last element is an outcome model conditional on treatment, pretreatment confounders,
  and all of the mediators, i.e., \eqn{M_1,\ldots, M_K}.
  }

  The fitted model objects can be of type \code{\link{lm}}, \code{\link{glm}}, \code{\link[BART]{wbart}},
  or \code{\link[BART]{pbart}}.}

\item{ps_model}{an optional propensity score model of the treatment. It can be of type \code{\link{glm}}
or \code{\link{BART}{pbart}}. When it is provided, the imputation-based weighting estimator is also used
to compute path-specific causal effects.}

\item{nboot}{number of bootstrap iterations for estimating confidence intervals. Default is 500.}

\item{conf_level}{the confidence level of the returned two-sided confidence
intervals. Default is \code{0.95}.}

\item{data}{a data frame containing all variables.}

\item{...}{additional arguments to be passed to \code{boot::boot}, e.g.
\code{parallel} and \code{ncpus}.}

\item{x}{a fitted model object returned by the \code{\link{paths}} function.}
}
\value{
An object of class \code{paths}, which is a list containing the
  following elements \describe{
  \item{pure}{estimates of direct and path-specific effects via \eqn{M_1, \ldots, M_K}
    based on the pure imputation estimator.}
  \item{hybrid}{estimates of direct and path-specific effects via \eqn{M_1, \ldots, M_K}
    based on the imputation-based weighting estimator.}
  \item{varnames}{a list of character strings indicating the names of the pretreatment confounders (\eqn{X}),
  treatment(\eqn{A}), mediators (\eqn{M_1, \ldots, M_K}), and outcome (\eqn{Y}).}
  \item{call}{the original call to the \code{paths} function.}
  }
}
\description{
\code{paths} estimates path-specific causal effects in the presence of \eqn{K(\geq 1)} causally
ordered mediators. It implements the pure imputation estimator and the imputation-based weighting
estimator (when a propensity score model is provided) as detailed in Zhou and Yamamoto (2020).
The user supplies the names of the treatment and outcome variables, \eqn{K+1} fitted outcome models given
pretreatment confounders and varying sets of mediators, and a data frame containing all the variables. The
function returns \eqn{K+1} path-specific causal effects that together constitute the total treatment effect.
When \eqn{K=1}, the path-specific causal effects are identical to the natural direct and indirect effects in
standard causal mediation analysis (Imai et al. 2010; VanderWeeele 2015).
}
\examples{

data(tatar)

####################################################
# Causal Paths Analysis using GLM
####################################################

# outcome model formulas
formula_m0 <- annex ~ kulak + prosoviet_pre + religiosity_pre + house_pre +
  land_pre + orchard_pre + animals_pre + carriage_pre + otherprop_pre + violence
formula_m1 <- update(formula_m0,    ~ . + trust_g1 + victim_g1 + fear_g1)
formula_m2 <- update(formula_m1,    ~ . + trust_g2 + victim_g2 + fear_g2)
formula_m3 <- update(formula_m2,    ~ . + trust_g3 + victim_g3 + fear_g3)

# propensity score model formula
formula_ps <- violence ~ kulak + prosoviet_pre + religiosity_pre + house_pre +
  land_pre + orchard_pre + animals_pre + carriage_pre + otherprop_pre

# outcome models
glm_m0 <- glm(formula_m0, family = binomial("logit"), data = tatar)
glm_m1 <- glm(formula_m1, family = binomial("logit"), data = tatar)
glm_m2 <- glm(formula_m2, family = binomial("logit"), data = tatar)
glm_m3 <- glm(formula_m3, family = binomial("logit"), data = tatar)
glm_ymodels <- list(glm_m0, glm_m1, glm_m2, glm_m3)

# propensity score model
glm_ps <- glm(formula_ps, family = binomial("logit"), data = tatar)

# causal paths analysis using glm
paths_glm <- paths(a = "violence", y = "annex", glm_ymodels, ps_model = glm_ps, data = tatar,
  parallel = "multicore", ncpus = 4, nboot = 100)

####################################################
# Causal Paths Analysis using BART
####################################################

x <- c("kulak", "prosoviet_pre", "religiosity_pre", "house_pre", "land_pre", "orchard_pre",
  "animals_pre", "carriage_pre", "otherprop_pre")
a <- "violence"
m1 <- c("trust_g1", "victim_g1", "fear_g1")
m2 <- c("trust_g2", "victim_g2", "fear_g2")
m3 <- c("trust_g3", "victim_g3", "fear_g3")
y <- "annex"

# constructing design matrices for fitting pbart models
Y <- tatar[[y]]
M0 <- as.matrix(tatar[, c(x, a), drop = FALSE])
M1 <- as.matrix(tatar[, c(x, a, m1), drop = FALSE])
M2 <- as.matrix(tatar[, c(x, a, m1, m2), drop = FALSE])
M3 <- as.matrix(tatar[, c(x, a, m1, m2, m3), drop = FALSE])

# outcome models
pbart_m0 <- BART::pbart(x.train = M0, y.train = Y)
pbart_m1 <- BART::pbart(x.train = M1, y.train = Y)
pbart_m2 <- BART::pbart(x.train = M2, y.train = Y)
pbart_m3 <- BART::pbart(x.train = M3, y.train = Y)
pbart_ymodels <- list(pbart_m0, pbart_m1, pbart_m2, pbart_m3)

# causal paths analysis using pbart
pbart_glm <- paths(a, y, pbart_ymodels, ps_model = glm_ps, data = tatar,
  parallel = "multicore", ncpus = 4, nboot = 4)
}
\references{
Zhou, Xiang and Teppei Yamamoto. 2020. "\href{https://osf.io/2rx6p}{Tracing Causal Paths from Experimental and Observational Data}".
}
